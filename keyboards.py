from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters.callback_data import CallbackData

import logging


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def create_main_menu_keyboard():
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
    button_service_list = KeyboardButton(text="üíº –ü–µ—Ä–µ—á–µ–Ω—å —É—Å–ª—É–≥ –Ω–∞–∫—Ä—É—Ç–∫–∏")
    button_support_chat = KeyboardButton(text="üßë‚Äçüíª –ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π")
    button_my_profile = KeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    button_my_orders = KeyboardButton(text="üìë –ú–æ–∏ –∑–∞–∫–∞–∑—ã")
    button_balance_recharge = KeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")

    # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    menu_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [button_service_list, button_support_chat],
            [button_my_profile, button_my_orders],
            [button_balance_recharge]
        ],
        resize_keyboard=True
    )

    return menu_keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
class Pagination(CallbackData, prefix="pag"):
    action: str
    page: int


def paginator(page: int = 0):
    pagination_keyboard = InlineKeyboardBuilder()
    pagination_keyboard.add(
        InlineKeyboardButton(text="‚¨Ö Previous", callback_data=Pagination(action="prev", page=page).pack()),
        InlineKeyboardButton(text="Next ‚û°", callback_data=Pagination(action="next", page=page).pack())
    )
    return pagination_keyboard


def create_service_list_keyboard(service_list_data):
    try:
        print("–ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
        keyboard_list = []
        social_networks = set()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ —Å–µ—Ä–≤–∏—Å–∞—Ö
        for service_data in service_list_data:
            category = service_data.get('category')
            social_network = category.split('-')[0].strip().capitalize()

            # –ò—Å–∫–ª—é—á–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Å–æ—Ü—Å–µ—Ç–µ–π —Å —Ñ–ª–∞–≥–∞–º–∏ —Å—Ç—Ä–∞–Ω
            if ord(social_network[0]) >= 127397:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª —Å–∏–º–≤–æ–ª–æ–º —Ñ–ª–∞–≥–∞ —Å—Ç—Ä–∞–Ω—ã
                social_network = social_network[2:].strip().capitalize()  # –£–¥–∞–ª—è–µ–º —Å–∏–º–≤–æ–ª—ã —Ñ–ª–∞–≥–∞ —Å—Ç—Ä–∞–Ω—ã

            social_networks.add(social_network)

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
        sorted_networks = sorted(social_networks)

        max_buttons_per_chunk = 30  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –∫–∞–∂–¥–æ–º —á–∞–Ω–∫–µ
        chunks = [sorted_networks[i:i + max_buttons_per_chunk] for i in
                  range(0, len(sorted_networks), max_buttons_per_chunk)]

        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä: {len(chunks)}")

        for i, chunk in enumerate(chunks):
            keyboard_buttons = []
            for network in chunk:
                button = InlineKeyboardButton(text=network, callback_data=f"network_{network.lower()}")
                keyboard_buttons.append(button)

            keyboard_markup = InlineKeyboardBuilder()
            keyboard_markup.add(*keyboard_buttons)
            keyboard_markup.adjust(3)

            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            pagination = paginator(page=i)  # –°–æ–∑–¥–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ç–æ—Ä –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
            keyboard_markup.attach(pagination)

            # –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ —Å–ø–∏—Å–æ–∫
            keyboard_list.append(keyboard_markup)

        return keyboard_list
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: {e}")
        return None
